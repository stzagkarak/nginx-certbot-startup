
#upstream keycloakServer {
    # reference to docker compose container name that is linked using the same bridge network
    # to the nginx compose file 
#    server keycloak:8080;
#}

server {

    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;

    set $vardom your.domain.com;

    # you can add more subdomains if needed be ex. server_name $vardom auth.domain.com;  
    server_name $vardom;

    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/$vardom/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/$vardom/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/$vardom/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    # example config to test if working
    return 200 'Let\'s Encrypt certificate successfully installed!';
    add_header Content-Type text/plain;
    
    # example proxy pass to a keycloak server
    #location / {
    #    proxy_pass http://keycloakServer;
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto $scheme;
    #}
}